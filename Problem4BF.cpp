#include<bits/stdc++.h>
using namespace std;
int main(){
  int c,n;
  scanf("%d %d",&c,&n);//读入背包容量c以及物品件数n
  int w[100],v[100];
  for(int i=1;i<=n;i++){
    scanf("%d %d",&w[i],&v[i]);
  }//读入每件物品的重量以及价值
  int value=0;//背包总价值初始化
  for(int i=0;i<(1<<n);i++){
    int totv=0,totw=0;
    for(int j=0;j<n;j++){
      if(i&(1<<j)){
        totv+=v[j+1];
        totw+=w[j+1];
      }
    }
    if(totw<=c)value=max(totv,value);
    else continue;
  }
/*
我将解释上述两层循环代码：
1、由于是0-1背包问题，即对于一件物品，只有取或不取两种情况，那么假设n为4，则枚举结果有1111、1001、0011等情况，因此可以考虑用二进制及其位运算来实现枚举。
2、设置变量i表示每一次的枚举情况。i的大小，参考上述说明，可以知道i转化为二进制后最大值为111...111（n个1），那么i<(1<<n)。（1<<n表示将1向左移动n为，若n为4，则1<<n为10000，恰好等于1111+1）
3、为计算每一次枚举结果，设置变量j来实现遍历每一次枚举中各个物品取或不取的情况。由于共有n件物品，易得j的范围为0-n。当某次j的取值对应i的进制位为1时，则代表该件物品被取，反之则不取。
（这里if(i&(1<<j))亦即if(i&(1<<j)==1)，比如说在某次i枚举情况为0101且当j循环到2时，1<<j为0100，由于i和(1<<j)第三位均为1，经过&的位运算得i&(1<<j)=0100，
在布尔类型中除了全为0的情况为false，其余均为true(即1)，第3（j+1)件物品被取。
4、计算每一次枚举情况得到的总重量和总价值。
*/
  printf("%d",value);
  return 0;
}
